name: Build and publish container

on:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  schedule:
    # 21:00Z every Saturday
    - cron: "0 21 * * 6"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # get the current date to add as a tag to the docker image
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      # checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # setup node (v22)
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
    
      # install npm dependencies
      - name: Install dependencies
        run: npm install

      # build node solution
      - name: Build node solution
        run: node --run build

      # login in to GitHub Container registry
      - name: Login to GitHub Container registry
        uses: docker/login-action@v3
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ghcr.io
          username: $GITHUB_USER
          password: ${{ secrets.GITHUB_TOKEN }}

      # build the docker image, push to GitHub container registry
      - name: Build and Push Docker Image
        env:
          REGISTRY: ghcr.io
          OWNER: robholme
          IMAGE_NAME: cloud-region-api
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ steps.date.outputs.date }}
          build-args: |
            NODE_ENV=production

      # remove old container images, leave the last 10 versions
      - name: Remove old container images 
        uses: actions/delete-package-versions@v5
        with: 
          package-name: 'cloud-region-api'
          package-type: 'container'
          min-versions-to-keep: 10


      # restart app service
      - name: Restart app service
        run: |
          az login --service-principal --username ${{ secrets.APP_REGISTRATION_ID }} --password ${{ secrets.APP_REGISTRATION_CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
          az webapp restart --name cloud-region --resource-group Cloud-Region-API
          az logout